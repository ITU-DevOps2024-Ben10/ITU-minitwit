@page /{author}

@using Minitwit.Core.Entities
@using Minitwit.Core.Repository
@using Microsoft.AspNetCore.Identity
@using FluentValidation

@inject SignInManager<Author> SignInManager
@inject UserManager<Author> UserManager
@inject IValidator<CreateCheep> Validator
@inject IAuthorRepository AuthorRepository
@inject ICheepRepository CheepRepository

<h2>@AuthorName's Timeline</h2>

@if (SignInManager.IsSignedIn(User))
{
    <CheepBox AuthorId="@AuthorId" />
}

@if (Cheeps == null || !Cheeps.Any())
{
    <div>
        <p>This user has no cheeps so far.</p>
    </div>
}
else
{
    <CheepList Cheeps="@Cheeps" />
}

@code {
    [Parameter]
    public string AuthorId { get; set; }

    [Parameter]
    public string AuthorName { get; set; }

    public List<Cheep> Cheeps { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var author = await AuthorRepository.GetAuthorById(AuthorId);
        AuthorName = author.Name;
        Cheeps = await CheepRepository.GetCheepsByAuthorId(AuthorId);
    }
}