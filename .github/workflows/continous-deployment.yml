name: Continuous Deployment
on:
  push:
    branches:
      - main
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Format and lint code
        run: |
          dotnet new tool-manifest
          dotnet tool install csharpier
          dotnet csharpier .
          dotnet format -v detailed .

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x
      - name: Restore dependencies
        run: dotnet restore src/Minitwit.Web
      - name: Build
        run: dotnet build src/Minitwit.Web --no-restore
      - name: Test
        run: |
          dotnet test test/Minitwit.CoreTests
          dotnet test test/Minitwit.InfrastructureTests
          dotnet test test/Minitwit.WebTests

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v1

      - name: Build and push minitwitimage
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/minitwitimage:latest

      - name: Test minitwit
        run: |
          docker run -d --rm ${{ secrets.DOCKER_USERNAME }}/minitwitimage:latest

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/minitwit
          chmod 600 ~/.ssh/minitwit
          SSH_HOST=${{ secrets.SSH_HOST }}
          ssh-keyscan -H "$SSH_HOST" >> ~/.ssh/known_hosts
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
    
      - name: Deploy to server
        run: |
          ssh -i ~/.ssh/minitwit ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << EOF
          docker pull ${{ secrets.DOCKER_USERNAME }}/minitwitimage:latest
          docker stack deploy -c docker-compose.yml Minitwit
          docker image prune -a --force
          EOF
