version: "3.8"
volumes:
  prometheus-data: {}
  grafana-data: {}
  elk_elasticsearch_data: {}

services:
  
  minitwit:
    container_name: webserver
    image: minitwitimage:latest
    ports:
      - "8080:8080"
      - "8081:8081"
    env_file:
      - .env
    networks: 
      - minitwit-network
    command: [ "dockerize", "-wait", "tcp://database:3306", "-timeout", "30s", "./start-webserver.sh" ]
  
  prometheus_server:
    container_name: prometheus
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    restart: unless-stopped
    networks:
      - minitwit-network
    volumes:
    - ./prometheus.yml:/etc/prometheus/prometheus.yml
        
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - '3000:3000'
    restart: unless-stopped
    volumes:
      - grafana-data:/var/lib/grafana
      - ./dashboards:/etc/grafana/provisioning/dashboards
    networks:
      - minitwit-network

  elasticsearch:
    image: "elastic/elasticsearch:latest"
    environment:
        - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
        - "discovery.type=single-node"
    volumes:
        - elk_elasticsearch_data:/usr/share/elasticsearch/data
    networks:
        - elk

  kibana:
    image: "elastic/kibana:latest"
    environment:
        elasticsearch.hosts: '["http://elasticsearch:9200"]'
    networks:
        - elk

  filebeat:
    image: "elastic/filebeat:latest"
    user: root
    volumes:
        - ${ELK_DIR}/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
        - /var/lib/docker:/var/lib/docker:ro
        - /var/run/docker.sock:/var/run/docker.sock
    networks:
        - elk
    
  
networks:
    minitwit-network:
        name: minitwit-network
    elk:
        

